[ {
  "name" : "Enterprise Automation with Selenium and why it has very little to do with Selenium",
  "id" : "Enterprise Automation with Selenium and why it has very little to do with Selenium",
  "speakers" : [ {
    "speaker" : "Michael Palotas",
    "company" : "Element34 Solutions GmbH",
    "bio" : [ "Основатель CEO компании Element34 Solutions. Один из разработчиков Selenium Grid. Бывший директор Quality Engineering в eBay. Более 10 лет Майкл формировал подход к тестированию в компании eBay International, находясь на должности главы Quality Engineering. Он был руководителем, ответственным за трансформацию eBay International из бездны ватерфолла, в очень гибкую организацию, использующую новые пути и подходы, особенно в области инженерных практик. До того как присоединиться к eBay, Майкл занимал ведущие должности в таких компаниях как Ericsson, Nortel Networks и Intel." ],
    "imageUrl" : "https://images.contentful.com/ut4a3ciohj8i/36QALDb8U0emkWoM6seMeU/d3d8b79bc552696d5aea951fc4abd00e/michael_palotas__1_.jpg?w=200"
  } ],
  "url" : "https://heisenbug-moscow.ru/talks/2017/msk/3laec6eiase0u2kcaguck4/",
  "description" : [ "Поскольку Selenium становится стандартом W3C, все больше и больше организаций начинают использовать его как основной инструмент автоматизации тестирования. Большинство команд фокусируется на написании тестов и борьбе с проблемами с помощью самого Selenium. Тем не менее, по нашему опыту, Selenium - это наименьшая проблема при создании с нуля решения для тестирования, пригодного для использования в enterprise проектах. В этом докладе будет рассматриваться множество реальных практических примеров того, как автоматизация тестирования с помощью Selenium в конце концов превращается в разработку проекта по созданию большого программного продукта. Нужно с самого начала понимать, что это именно вот такой программный проект, и вести его соответственно. Доклад покажет основные проблемы, не позволяющие командам строить расширяемые и надежные решения на основе инструментов Selenium. Также мы увидим, как можно успешно применять принципы lean в созданиии подобного решения на основе Selenium." ]
}, {
  "name" : "Automate the impossible: blending the best of Android drivers",
  "id" : "Automate the impossible: blending the best of Android drivers",
  "speakers" : [ {
    "speaker" : "Rajdeep Varma",
    "company" : "Badoo",
    "bio" : [ "Сейчас он работает Senior Test Automation engineer в Badoo. У него есть настоящая страсть к автоматизации тестирования, как говорится - автоматизирует все что движется. Он занимался автоматизацией множества мобильных приложений во многих предметных областях, в течение более чем семи лет. Rajdeep написал несколько утилит с открытым исходным кодом, включая \"*parallel_calabash*\" и \"*nakal*\" - они оформлены в виде RubyGems и предназначены для тестирования мобильных приложений." ],
    "imageUrl" : "https://images.contentful.com/ut4a3ciohj8i/4hSZdMVaQwGScyEkA42wsq/fae17b855c523ab06b298c04c9022c0b/Rajdeep_Varma.jpg?w=200"
  } ],
  "url" : "https://heisenbug-moscow.ru/talks/2017/msk/4l06a7ypfmc4y6e00k44ku/",
  "description" : [ "Сейчас мы находимся на пороге удивительных изменений - всё больше мобильных разработчиков присматриваются к инструментам для автоматического тестирования с открытым исходным кодом. Это может быть Appium или Calabash, или что-то еще: все они хороши, но также верно, что у всех есть важные ограничения. Как нам выжать максимум из каждого инструмента? Как определить их лучшие стороны? Несмотря на то, что выбранный инструмент может работать весьма хорошо в самом начале, когда вы только-только начали его использовать, всё может резко измениться при изменении ваших бизнес-требований. К счастью, мир Open Source достаточно щедр, чтобы дать вам возможность пойти и самостоятельно преодолеть возникшие ограничения. Этот доклад о том, как спикер справился с подобной проблемой. Несмотря на то, что он работал над Calabash-Android в течение нескольких лет, новые бизнес-требования заставили добавить в драйвер дополнительные возможности. Это доклад о конкретной проблеме, как она была решена, и какие у нас вообще есть возможности при решении подобных задач." ]
}, {
  "name" : "The (Ab)use and misuse of test automation",
  "id" : "The (Ab)use and misuse of test automation",
  "speakers" : [ {
    "speaker" : "Alan Page",
    "company" : "Unity",
    "bio" : ["Алан Пейдж проработал тестировщиком программного обеспечения примерно 25 лет. Он был основным автором книги [\"How We Test Software at Microsoft\"](https://www.amazon.com/How-We-Test-Software-Microsoft/dp/0735624259) и поучаствовал в создании [\"Beautiful Testing and Experiences of Test Automation: Case Studies of Software Test Automation\"](https://www.amazon.com/Experiences-Test-Automation-Studies-Software/dp/0321754069). Кроме того, он пишет статьи на различные инженерные темы в своем блоге, его посты можно найти повсюду в интернете. Его последняя \"книга\" является коллекцией эссе на тему автоматического тестирования под общим именем \"The A Word\". Алан присоединился к Microsoft и стал частью команды Windows 95, и с тех пор работал над множеством релизов Windows, над ранними версиями Internet Explorer и Office Lync. В том числе, Алан два года проработал в Microsoft директором по тестированию. В январе 2017 года Алан ушел из Microsoft на должность директора по качеству в Unity."],
    "imageUrl" : "https://images.contentful.com/ut4a3ciohj8i/31DRIcKB2MsAAomyACcysg/89f01e9bd592c0366922a5ea194e16cf/alan_page__1_.jpg?w=200"
  } ],
  "url" : "https://heisenbug-moscow.ru/talks/2017/msk/65awpkh6vyyquuy0kgk0ww/",
  "description" : [ "Если вы - тестировщик, пишущий код, то скорей всего, ваша работа включает в себя автоматизацию тестирования - в особенности, написание тестов, которые автоматизируют рабочий процесс пользователя. Будучи ветераном автоматизированного тестирования (уже двадцать лет, и эта цифра продолжает расти!), Алан Пейдж видел множество команд, попытки которых хоть как-то заняться автоматизацией раз за разом оказывались абсолютно неуспешными. Тем не менее, он умудрился поучаствовать в тех немногих командах, у которых всё получилось, и на этом докладе поделится мудростью и паттернами, которые действительно работают (и кучей паттернов, которые никуда не годятся - тоже поделится).  Алан покажет успешные стратегии автоматизации, как бороться с flaky тестами, проведет сквозь опасности автоматизации UI и даст ряд других советов, основываясь на многолетнем опыте в автоматизации тестирования во множестве больших продуктов. Вы можете быть продвинутым тестировщиком, или напротив, только начинать карьеру - в этом докладе найдутся советы для всех, причем такие советы, которые можно применить на практике почти мгновенно." ]
}, {
  "name" : "Scaling Selenium",
  "id" : "Scaling Selenium",
  "speakers" : [ {
    "speaker" : "Simon Stewart",
    "company" : "The Selenium Project",
    "bio" : [ "Саймон Стюарт - создатель WebDriver и глава проекта Selenium. В прошлом он был главой команды, занимающейся инструментами сборки в Facebook, разрабатывал графовую утилиту сборки Buck, и яро выступал за использование монорепозиториев. До того, как присоединиться к Facebook, он почти пять лет подряд провёл в Google, и три года - в ThoughtWorks. Он видел реально много кода. Кроме того, Саймон серьезно интересуется воспроизводимыми байт-в-байт сборками." ],
    "imageUrl" : "https://images.contentful.com/ut4a3ciohj8i/1xgKYiOX5CIyoImwiqwOgE/75331b93fb6056956c514ec2ec4fdc07/stewart_simon__1_.jpg?w=200"
  } ],
  "url" : "https://heisenbug-moscow.ru/talks/2017/msk/4axfxghfmo0ke0oyyack6g/",
  "description" : [ "Представьте, что у вас всего один тест на Selenium. Что может сделать его нестабильным? Что может его ускорить? Теперь представьте два теста. Теперь - сотни. Как бы заставить их выполняться быстрее? Какие проблемы встретятся по пути увеличения размера пачки тестов? В этом докладе мы начнем путешествие вместо с Саймоном и набором тестов, начиная с самого первого теста, и дальше, вплоть до запускать сотен тестов параллельно. Мы изучим встречающиеся по дороге проблемы и получим практические рекомендации о том, как с ними бороться. Здесь будет много кода! Обсуждение железа тоже будет. Здесь мы поговорим, как с умом подходить к инфраструктуре сборки и тестирования." ]
}, {
  "name" : "Loading time testing and results visualisation of web games",
  "id" : "Loading time testing and results visualisation of web games",
  "speakers" : [ {
    "speaker" : "Andrejs Kalnacs",
    "company" : "Evolution Gaming",
    "bio" : [ "Andrejs занимается автоматизацией тестирования и качеством программного обеспечения, и особенно хорошо разбирается в веб-разраобтке для мобильных приложений. Он имеет десятилетний опыт в индустрии тестирования, в различных областях - игры, мобильные телекоммуникации, биометрия, банкинг, ритейл. Сейчас работает на должности \"Lead Software Developer in Test\" в Evolution Gaming, выводя тестирование веб-приложений  на новый уровнь - реализуя не только решения для функционального тестирования, но и для нефункционального - такого как тестирование перфоманса или времени загрузки. Кроме того, он известен как человек, всегда готовый помочь коллегам - обучать их, мотивировать, вдохновлять и думать вне рамок и ограничений, учиться и применять более эффективные инструменты и технологии." ],
    "imageUrl" : "https://images.contentful.com/ut4a3ciohj8i/771Bz4OOXKkY0mUqQmKYSK/090942aa1ae558e42745d823171d6fea/andrejsk__1_.jpg?w=200"
  } ],
  "url" : "https://heisenbug-moscow.ru/talks/2017/msk/jjnfwa6ewsussuce2kmoe/",
  "description" : [ "Время загрузки приложения - очень важная метрика, если хочется достичь максимально хорошего user experience, и не притащить каких-нибудь регрессий. Она особенно важна для игр с веб-интерфейсом, поскольку когда пользователь загружает игру в первый раз, все её ассеты загружаются из интернета и начинают визуализироваться с помощью различных платформ (JS/HTML5, Flash) и устройств (Android и iOS, телефоны и планшеты). Этот доклад состоит из двух частей: в первый части мы рассмотрим не только все необходимые элементы для построения полностью автомтаизированного пайплайна для тестирования времени загрузки игры с веб-интерфейсом, используя такие технологии как Selenium WebDriver, Selenium Grid, Appium, Zaproxy, контроль трафика в Linux, Jenkins и Docker - но еще и изучим наиболее важные метрики, какие данные мы можем собирать, и как именно их стоит хранить. Вторая часть доклада будет посвящена визуализации результатов тестирования, причем её можно будет применить не только для тестирования времени загрузки игр, но и для множества других задач, с использованием InfluxDB и Grafana." ]
}, {
  "name" : "Завершающий кейноут: Truths about technical testing",
  "id" : "Truths about technical testing",
  "speakers" : [ {
    "speaker" : "Alan Page",
    "company" : "Unity",
    "bio" : [ ],
    "imageUrl" : "https://images.contentful.com/ut4a3ciohj8i/31DRIcKB2MsAAomyACcysg/89f01e9bd592c0366922a5ea194e16cf/alan_page__1_.jpg?w=200"
  } ],
  "url" : "https://heisenbug-moscow.ru/talks/2017/msk/1tquz3o2n2qi6waqio4ca2/",
  "description" : [ "Большинство из нас слышали от уважаемых людей (или читали в интернете) о \"техническом тестировании\". Конечно, технические знания - критически важная вещь для успеха. Но, несмотря на то, что большинство докладов о теническом тестировании заключаются в обсуждении проблем автоматизации тестирования, как правило, нашим техническим ноу-хау существуют куда более ценные применения. В этом завершающем кейноуте, Алан Пейдж поделится своим подходом к техническому тестированию, причинами почему в своей команде они уменьшают количество автоматизации, и как именно тестировщики могут более эффективно распорядиться своим техническим бэкграундом, чтобы внести больший вклад в работу команды. Кроме всего прочего, Алан покажет примеры наиболее любимых и практичных инструментов тестирования и расскажет о пользе наработки мощного и разностороннего набора инструментов." ]
} ]